pipeline
{
	agent any
	
	options
	{
		skipDefaultCheckout()
		disableConcurrentBuilds()
	}

	stages
	{
		stage('Checkout Code')
		{
			steps
			{
				checkout scm
			}
		}

		stage('Build Code')
		{
			steps
			{
				build job: 'airwolf-build-job'
			}
		}

		stage('Test Code')
		{
			steps
			{
				sh 'mvn test'
			}
		}
	}

	post
	{
		success
		{
			script
			{
				def branchName = getCurrentBranch()
				echo 'My branch is' + branchName

				/*
				echo "${env.GIT_BRANCH}"
				if (env.GIT_BRANCH == 'master')
				{
					build job: 'airwolf-deploy-pipeline'
				}
				*/
			}
		}
	}
}

def getCurrentBranch () {
    return sh (
        script: 'git rev-parse --abbrev-ref HEAD',
        returnStdout: true
    ).trim()
}